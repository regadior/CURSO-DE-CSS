/* La primera parte de esta lección está en _base */

/* (esta es la 3ra. función de SASS en el orden del curso, pero se coloca de primero porque a juro debe escribirse primero que cualquier regla scss, es una de las reglas para que funcione [en este caso no hay más 
reglas porque se movieron al módulo _base]). Otra función que tiene 
SASS son los módulos (esto no es algo que se agrega a CSS pues es algo que se hace de manera nativa en CSS desde hace tiempo y de muchas formas, esta es otra forma más [es el quivalente a @import de CSS]), estos son
otros archivos con estilos específicos que podemos importar a nuestro SASS, agregando así algún otro estilo que queramos para algún elemento específico, para esto se debe escribir @use seguido del nombre del archivo 
que se quiere importar (el nombre del archivo debe escribirse entre comillas y no es necesario escribir su extensión [.scss] porque ya nuestro documento lo reconoce), en resumen se unen varios documentos 
.scss (varios módulos) con nuestro documento principal (el documento al que importamos) */

/* Es muy importante resaltar que los SCSS con nombre encabezado y base tienen un guion bajo al comienzo, en la página de SASS se explica que estos son parciales. "Puede crear archivos Sass parciales que contengan 
pequeños fragmentos de CSS  que puede incluir en otros archivos Sass. Esta es una excelente manera de modularizar su CSS y ayudar a que las cosas sean más fáciles de mantener, un parcial es un archivo Sass nombrado 
con un guión bajo inicial. Podrías nombrarlo algo como _partial.scss. El guión bajo le permite a Sass saber que el archivo es solo un archivo parcial y que no debe generarse en un archivo CSS". Al invocar estos 
archivos con la regla @use no es necesario copiar la extensión .scss y tampoco el guion bajo como se puede ver en el siguiente ejemplo */

/* También es muy importante mencionar que si tuvieramos variables en un módulo que se importa con @use y tratan de usarse dichas variables como valor de una propiedad, no funcionarán, ya que no están declaradas en el
scss principal y la regla @use no hace a las variables globales (una variable global se puede conseguir con un @import pero este no es recomendado por SASS ya, la variable global puede invocarse desde cualquier 
documento que la tenga declarada o importada), entonces, para poder acceder a esas variables debemos copiar el nombre del scss, un punto y el nombre de la variable como valor de la propiedad. Por ejemplo: si la 
variable $color-fondo: #ccc; estuviera en el scss encabezado, para usarla como valor en estilos.scss deberíamos escribir encabezado.$nombre de la variable, si esto no se hace, al compilar habrá un error que indica 
que la variable no ha sido declarada*/


//MÓDULOS
/* Este archivo es un módulo, con el se establece un subrayado para los h1 */
@use 'encabezado';
/* Este es otro módulo, con el se modifican los span para que la letra sea más gruesa */
@use'base';