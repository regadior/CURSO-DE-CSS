/*
Las transiciones como lo indica su nombre, nos permite hacer la transición de un elemento cuando cambia sus estilos porque se
llegan a cumplir las condiciones de alguna pseudoclase, haciendo un efecto suavizado al momento de cambiar de un estilo a
otro.
*/

#boton {
    display: block;
    padding: 20px;
    background-color: green;
    color: white;
    width: 200px;
    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    text-decoration: none;
    border: 5px solid rgb(5, 59, 5);
    transition: all 500ms;
    /*Esta propiedad es la que permite hacer las transiciones de un estilo a otro cuando un elemento cam-
    bia porque se cumple una condición de alguna pseudoclase; la propiedad transition debe agregarse a los estilos del elemen-
    to original, no a la regla CSS que tiene la pseudoclase. Se puede establecer el valor all (todos) para que la transición
    se de en la misma cantidad de tiempo para todos los estilos, luego de all se deben agregar los segundos o minisegundos en
    que se quiere la transición, como se puede ver en el ejemplo    
    */
    /*transition: border-radius 2s, background-color 10s, border 20s;*/
    /*Se puede seleccionar también cada uno de los esti-
    los que cambiarán por separado y agregarles un tiempo de transición a cada uno; para esto se debe copiar cada estilo 
    seguido del tiempo de transición, todos deben estar separados entre sí por una coma (,), y al terminar se cierran los 
    valores con punto y coma (;) como en el ejemplo*/

    /*transition: border-radius 3s;*/
    /*También se puede establecer una transición para uno solo de los estilos que se van a
    cambiar, como en este ejemplo en el que se establece una transición de 3 segundos para el borde-radius solamente*/
}

#boton:hover {
    /*Con este selector y la pseudoclase hover se estableció que se cambien los estilos del botón a los que están
    dentro de la regla de CSS, para poder hacer la transición*/
    border-radius: 15px;
    background-color: orangered;
    color: white;
    border: 5px solid red;
}

/*
    Se debe resaltar que las transiciones no se dan cuando se hace un cambio de text-align, así que esto debería evitarse
*/


/*
    Las animaciones se diferencian de las transiciones en que éstas no se ejecutan cuando se cumple la condición de alguna
    pseudoclase, se pueden lanzar de manera infinita desde el principio de la ejecución de una página, o si se trabaja con
    javascript y se añade una clase que tiene esa animación adjuntada, o tiene esas propiedades para realizar la animación,
    se le podría añadir a un elemento para que empiece a realizar una animación, o se le quita para que deje de hacer la ani-
    mación. 
    
    Con una animación se pueden hacer cosas más complejas que lo que se hace con una transición, porque las anima-
    ciones están basadas en key-frames (fotogramas clave), una animación va desde un punto 0 a un punto 100 y tiene tantos
    key-frames como cifras tiene el porcentaje de avance de la animación
*/

#caja {
    width: 250px;
    height: 250px;
    background-color: lightseagreen;
    color: white;
    border: 5px solid black;
    margin-top: 25px;
    font-size: 20px;
    text-align: center;
    line-height: 250px;
    animation-name: desplazamiento;
    /*Con esta propiedad se asigna a un elemento los key-frames de una animación, se coloca
    animation-name y el nombre que se le dio*/
    animation-duration: 10s;
    /*Con esta propiedad se establece cuánto tiempo debe durar la animación*/
    animation-iteration-count: infinite;
    /*Con esta propiedad se establece si se quiere que la animación sea infinita*/
}

@keyframes desplazamiento {

    /*Con esta propiedad se agregan los key-frames de las animaciones, primero se copia la propiedad,
    luego el nombre de los keyframes y dentro de las llaves los puntos clave, en este caso se copió primero from (desde) y
    to (a o hasta), siendo así 2 key-frames*/
    from {
        /*Con este key-frame se indica que el elemento comenzará su animación teniendo 0px de margen a la izquierda*/
        margin-left: 0px;
    }

    to {
        /*Y se moverá hasta tener 600px de margen a la izquierda, al llegar a tener ese margen, la caja dejará de estar 
        animada y volverá a estar en el mismo lugar de un salto, también se debe resaltar que la caja se desplaza rápido
        al comienzo y termina su desplazamiento más lentamente.*/
        margin-left: 600px;
    }
}

#caja2 {
    width: 250px;
    height: 250px;
    background-color: lightseagreen;
    color: white;
    border: 5px solid black;
    margin-top: 25px;
    font-size: 20px;
    text-align: center;
    line-height: 250px;
    animation-name: desplazamiento2;
    /*Con esta propiedad se asigna a un elemento los key-frames de una animación, se coloca
    animation-name y el nombre que se le dio*/
    animation-duration: 20s;
    /*Con esta propiedad se establece cuánto tiempo debe durar la animación*/
    animation-iteration-count: infinite;
    /*Con esta propiedad se establece si se quiere que la animación sea infinita*/
    animation-timing-function: linear;
    /*Con esta propiedad se establece cómo será la velocidad de la animatción, hay varios
    valores, pero con linear se hace que la animación se haga uniformemente, así que lo que se hizo fue que la caja se movie-
    ra a la misma velocidad desde el principio, y no rápido al principio y lento al final como estaba antes*/
}

@keyframes desplazamiento2 {
    /*Aquí se copian más de 2 keyframes, se hace para poder conseguir que la caja termine su anima-
    ción en donde la comienza sin hacer un salto brusco*/

    0% {
        margin-left: 0px;
    }

    50% {
        margin-left: 600px;
    }

    100% {
        margin-left: 0px;
    }
}


#caja3 {
    width: 250px;
    height: 250px;
    background-color: lightseagreen;
    color: white;
    border: 5px solid black;
    margin-top: 25px;
    font-size: 20px;
    text-align: center;
    line-height: 250px;
    animation-name: desplazamiento3;
    /*Con esta propiedad se asigna a un elemento los key-frames de una animación, se coloca
    animation-name y el nombre que se le dio*/
    animation-duration: 20s;
    /*Con esta propiedad se establece cuánto tiempo debe durar la animación*/
    animation-iteration-count: infinite;
    /*Con esta propiedad se establece si se quiere que la animación sea infinita*/
    animation-timing-function: linear;
    /*Con esta propiedad se establece cómo será la velocidad de la animatción, hay varios
    valores, pero con linear se hace que la animación se haga uniformemente, así que lo que se hizo fue que la caja se movie-
    ra a la misma velocidad desde el principio, y no rápido al principio y lento al final como estaba antes*/
}

@keyframes desplazamiento3 {
    /*Aquí se agregó la propiedad transfrom a los key-frames para hacer que rotara la caja,
    se copió transform con el valor rotate y entre parentesis se copia la cantidad de grados que debe rotar*/

    0% {
        /*Con esto se estableció que cuando la animación lleve 0%, el elemento  gire 0 grados y tenga un margen de cero pixe-
        les*/
        margin-left: 0px;
        transform: rotate(0deg);
        /*Esto indica que la caja rotará 0 grados al inicio de la animación*/
    }

    50% {
        /*Con esto se estableció que cuando la animación lleve 50% (la mitad), el elemento  gire  grados y tenga un margen de cero pixe-
        les*/
        margin-left: 600px;
        transform: rotate(360deg);
        /*Esto indica que al llegar al 50% de la animación la caja debe haber girado 360 grados*/
    }

    100% {
        margin-left: 0px;
        transform: rotate(0deg);
        /*Esto indica que al volver al 0% de la animación la caja debe haber girado 360 grados de 
        nuevo*/
    }
}

#caja4 {
    width: 250px;
    height: 250px;
    background-color: lightseagreen;
    color: white;
    border: 5px solid black;
    margin-top: 25px;
    font-size: 20px;
    text-align: center;
    line-height: 250px;
    animation-name: desplazamiento4;
    /*Con esta propiedad se asigna a un elemento los key-frames de una animación, se coloca
    animation-name y el nombre que se le dio*/
    animation-duration: 20s;
    /*Con esta propiedad se establece cuánto tiempo debe durar la animación*/
    animation-iteration-count: infinite;
    /*Con esta propiedad se establece si se quiere que la animación sea infinita*/
    animation-timing-function: linear;
    /*Con esta propiedad se establece cómo será la velocidad de la animatción, hay varios
    valores, pero con linear se hace que la animación se haga uniformemente, así que lo que se hizo fue que la caja se movie-
    ra a la misma velocidad desde el principio, y no rápido al principio y lento al final como estaba antes*/
}

@keyframes desplazamiento4 {
    /*Aquí se agregó la propiedad border radius a un key-frame para hacer que la caja se convirtiera
    en un círculo, en otro keyframe se copió otro color de borde y otro estilo de borde para que cambie durante la animación*/

    0% {
        /*Con esto se estableció que cuando la animación lleve 0%, el elemento  gire 0 grados y tenga un margen de cero pixe-
        les*/
        margin-left: 0px;
        /*Esto indica que la caja rotará 0 grados al inicio de la animación*/
        transform: rotate(0deg);
    }

    /*Con esto se estableció que cuando la animación lleve 50% (la mitad), el elemento  gire 50 grados y tenga un margen de cero pixeles */
        {
        margin-left: 600px;
        /*Esto indica que al llegar al 50% de la animación la caja debe haber girado 360 grados*/
        transform: rotate(360deg);
        /*Esto indica que la caja tendrá un border radius de 999px al llegar al 50% de la animación*/
        border-radius: 999px;
    }

    75% {
        /*Esto indica que se cambiará el fondo de la caja al llegar al 75% de la animación*/
        background-color: red;
    }

    77% {
        border: blue dashed 5px;
        la animación*/
        /*Esto indica que se cambiará el color y estilo del borde de la caja al llegar al 77% de 
    }

    100% {
        margin-left: 0px;
        /*Esto indica que al volver al 0% de la animación la caja debe haber girado 360 grados de 
        transform: rotate(0deg);
        nuevo*/
    }
}

/*En el último ejemplo se deben reslatar varias cosas, el cambio de colores , formas y bordes que se hacen durante la 
animación se revierten, no se mantienen hasta el final. Lo otro que hay que resaltar es que el cambio de estilo de borde que
se hace durante la animación es brusco, por lo que no es tan recomendable*/